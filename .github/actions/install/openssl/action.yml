name: Install OpenSSL
description: Install and setup OpenSSL for linking and building test application
inputs:
  version:
    description: The desired OpenSSL version to install
    required: false
    default: "openssl-3.2.0"
runs:
  using: composite
  steps:
    - name: Cache CMake
      id: cache-openssl
      uses: actions/cache@v3
      with:
        path: openssl-${{ inputs.version }}
        key: ${{ runner.name }}-${{ runner.os }}-${{ runner.arch }}-${{ job.container.id }}-openssl-${{ inputs.version }}

    - uses: ilammy/setup-nasm@v1
    - if: runner.os == 'Windows'
      shell: powershell
      run: |
        Invoke-WebRequest -OutFile ${{ inputs.version }}.tar.gz -Uri https://github.com/openssl/openssl/archive/refs/tags/${{ inputs.version }}.tar.gz
    - if: runner.os == 'Windows'
      uses: ilammy/msvc-dev-cmd@v1
    - if: runner.os == 'Windows' && steps.cache-openssl.outputs.cache-hit != 'true'
      shell: cmd
      run: |
        tar -zxf ${{ inputs.version }}.tar.gz
        cd openssl-${{ inputs.version }}
        perl Configure VC-WIN64A --prefix=${{ github.workspace }}\openssl no-tests
        nmake
    - if: runner.os == 'Windows'
      shell: bash
      run: |
        cd openssl-${{ inputs.version }}
        nmake install_sw
        echo "OPENSSL_ROOT_DIR=${{ github.workspace }}/openssl" >> "$GITHUB_ENV"
        echo "OpenSSL_ROOT=${{ github.workspace }}/openssl" >> "$GITHUB_ENV"
    - if: runner.os == 'Linux' && steps.cache-openssl.outputs.cache-hit != 'true'
      shell: bash
      run: |
        wget https://github.com/openssl/openssl/archive/refs/tags/${{ inputs.version }}.tar.gz
        tar -zxf ./${{ inputs.version }}.tar.gz
        cd openssl-${{ inputs.version }}
        ./config --prefix=${{ github.workspace }}/openssl --libdir=lib no-tests
        make -j $(nproc)
    - if: runner.os == 'Linux'
      shell: bash
      run: |
        cd openssl-${{ inputs.version }}
        sudo make -j $(nproc) install_sw
        echo "OPENSSL_ROOT_DIR=${{ github.workspace }}/openssl" >> "$GITHUB_ENV"
        echo "OpenSSL_ROOT=${{ github.workspace }}/openssl" >> "$GITHUB_ENV"
